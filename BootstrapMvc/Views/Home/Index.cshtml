@model List<BootstrapMvc.Models.Foo>
@using GridMvc.Html
@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col-md-6">
        <form role="form">

            <!-- Nav tabs -->
            <ul class="nav nav-tabs" role="tablist">
                <li class="active"><a href="#profile" role="tab" data-toggle="tab">Profile</a></li>
                <li><a href="#center" role="tab" data-toggle="tab">Call Center</a></li>
            </ul>

            <!-- Tab panes -->
            <div class="tab-content">
                <div class="tab-pane active" id="profile">
                    <div class="form-group">
                        <label for="exampleInputName">Name</label>
                        <input type="text" class="form-control" id="exampleInputName" name="exampleInputName" placeholder="Enter name">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Email address</label>
                        <input type="email" class="form-control" id="exampleInputEmail1" name="exampleInputEmail1" placeholder="Enter email">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputTelephone">Telephone</label>
                        <input type="text" class="form-control" id="exampleInputTelephone" name="exampleInputTelephone" placeholder="Enter Telephone">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputDueDate">Due Date</label>
                        <input type="text" class="form-control" id="exampleInputDueDate" name="exampleInputDueDate" placeholder="Enter Due Date (mm/dd/yyyy)">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputRequestDetails">RequestDetails</label>
                        <textarea class="form-control" rows="3" id="exampleInputRequestDetails" name="exampleInputRequestDetails" placeholder="Enter Request Details" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputFile">Attachment</label>
                        <input type="file" class="form-control" id="exampleInputFile" name="exampleInputFile">
                    </div>
                </div>

                <div class="tab-pane" id="center">
                    <div class="form-group">
                        <label for="exampleInputRequestID">RequestID</label>
                        <input type="text" class="form-control" id="exampleInputRequestID" name="exampleInputRequestID" placeholder="Enter RequestID">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputParentRequestID">ParentRequestID</label>
                        <input type="text" class="form-control" id="exampleInputParentRequestID" name="exampleInputParentRequestID" placeholder="Enter ParentRequestID">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPriority">Priority</label>
                        <select class="form-control" id="exampleInputPriority" name="exampleInputPriority">
                            <option>HIGH</option>
                            <option>NORMAL</option>
                            <option>LOW</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputNotes">Notes</label>
                        <textarea class="form-control" rows="3" id="exampleInputNotes" name="exampleInputNotes" placeholder="Enter Notes"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputStatus">Status</label>
                        <select class="form-control" id="exampleInputStatus" name="exampleInputStatus">
                            <option>COMPLETE</option>
                            <option>NEW</option>
                            <option>ON HOLD</option>
                            <option>...</option>
                        </select>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>
    <div class="col-md-6">
        @Html.Grid(Model).Columns(columns =>
            {
                columns.Add(foo => foo.Title).Titled("Custom column title").SetWidth(110);
                columns.Add(foo => foo.Description).Sortable(true);
            }).WithPaging(20)
    </div>
</div>

@section JavaScriptFooter {
    <script>
        //$('#exampleInputDueDate').datepicker({
        //    onSelect: function () {
        //        $(this).valid();
        //    }
        //});
        $('#exampleInputDueDate').datetimepicker({
            timeFormat: "hh:mm tt"
        });

        $(document).ready(function () {
            $.validator.setDefaults({
                submitHandler: function () {
                    //alert("submitted!");
                    alertify.alert("submitted");
                }
            });
            $('form').validate({
                //wrapper: "div",
                //errorElement: "p",
                //errorClass: "text-danger",
                errorPlacement: function (error, element) {
                    error.insertAfter(element).wrap('<div class="row error"><div class="col-md-12 text-right"></div></div>');
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass(errorClass).parents('.form-group').addClass("has-error");
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass(errorClass).parents(".has-error").removeClass("has-error");
                },
                //success: function(label) {
                //	alertify.success(label.text());
                //},
                invalidHandler: function (event, validator) {
                    // 'this' refers to the form
                    var errors = validator.numberOfInvalids();
                    if (errors) {
                        var message = errors == 1 ? 'You missed 1 field. It has been highlighted' : 'You missed ' + errors + ' fields. They have been highlighted';
                        //$("div.error span").html(message);
                        //$("div.error").show();
                        alertify.error(message);
                    } else {
                        //$("div.error").hide();
                    }
                },
                rules: {
                    exampleInputName: "required",
                    exampleInputEmail1: "required",
                    exampleInputDueDate: {
                        required: true,
                        date: true
                    },
                    exampleInputTelephone: {
                        phoneUS: true
                    },
                    exampleInputFile: "required"
                },
                messages: {
                    exampleInputDueDate: "Please enter due date (mm/dd/yyyy)"
                }
            });

            alertify.alert("Message");
        });

    </script>
}

